{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/sprintf-js/src/sprintf.js","webpack:///./node_modules/hyperapp/src/index.js","webpack:///./src/utils.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","re","not_string","not_bool","not_type","not_primitive","number","numeric_arg","json","not_json","text","modulo","placeholder","key_access","index_access","sign","sprintf","parse_tree","argv","arg","k","match","pad","pad_character","pad_length","is_positive","cursor","tree_length","length","output","Array","isArray","Error","test","Function","isNaN","TypeError","parseInt","toString","String","fromCharCode","JSON","stringify","parseFloat","toExponential","toFixed","Number","toPrecision","substring","slice","toLowerCase","valueOf","toUpperCase","replace","charAt","repeat","sprintf_format","fmt","sprintf_cache","_fmt","arg_names","exec","push","SyntaxError","field_list","replacement_field","field_match","sprintf_parse","arguments","vsprintf","apply","concat","window","undefined","h","attributes","rest","children","node","pop","nodeName","patterns","halfBase64RegExp","fullBase64RegExp","URLRegExp","getConfigFromURL","RegExp","groups","parseURL","atob","trim","convertSStoObject","url","defaults","server","server_port","local_port","password","timeout","method","parsedSS","parseHalfBase64","assign","_objectSpread","port","_window$atob$trim$spl2","_slicedToArray","split","getMethodAndPass","config","testOnFullBase64","base64","parseFullBase64","src_actions","setURL","setJSON","result","setConfig","setError","error","convert","event","state","actions","preventDefault","main","document","querySelector","body","removeChild","view","container","skipRender","map","rootElement","oldNode","recycleElement","element","childNodes","nodeType","nodeValue","lifecycle","isRecycling","globalState","clone","wiredActions","wireStateToActions","path","action","data","getPartialState","then","scheduleRender","setPartialState","resolveNode","render","patch","parent","isSvg","newElement","createElement","createTextNode","createElementNS","oncreate","appendChild","updateAttribute","insertBefore","removeElement","oldAttributes","cb","onupdate","updateElement","oldKeyed","newKeyed","oldElements","oldChildren","oldKey","getKey","newKey","keyedNode","setTimeout","target","source","out","eventListener","currentTarget","events","type","oldValue","style","setProperty","addEventListener","removeEventListener","setAttribute","removeAttribute","done","removeChildren","ondestroy","onremove","app","className","onsubmit","required","oninput","list","keys"],"mappings":"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","file":"main.5562ba7d.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","/* global window, exports, define */\n\n!function() {\n    'use strict'\n\n    var re = {\n        not_string: /[^s]/,\n        not_bool: /[^t]/,\n        not_type: /[^T]/,\n        not_primitive: /[^v]/,\n        number: /[diefg]/,\n        numeric_arg: /[bcdiefguxX]/,\n        json: /[j]/,\n        not_json: /[^j]/,\n        text: /^[^\\x25]+/,\n        modulo: /^\\x25{2}/,\n        placeholder: /^\\x25(?:([1-9]\\d*)\\$|\\(([^\\)]+)\\))?(\\+)?(0|'[^$])?(-)?(\\d+)?(?:\\.(\\d+))?([b-gijostTuvxX])/,\n        key: /^([a-z_][a-z_\\d]*)/i,\n        key_access: /^\\.([a-z_][a-z_\\d]*)/i,\n        index_access: /^\\[(\\d+)\\]/,\n        sign: /^[\\+\\-]/\n    }\n\n    function sprintf(key) {\n        // `arguments` is not an array, but should be fine for this call\n        return sprintf_format(sprintf_parse(key), arguments)\n    }\n\n    function vsprintf(fmt, argv) {\n        return sprintf.apply(null, [fmt].concat(argv || []))\n    }\n\n    function sprintf_format(parse_tree, argv) {\n        var cursor = 1, tree_length = parse_tree.length, arg, output = '', i, k, match, pad, pad_character, pad_length, is_positive, sign\n        for (i = 0; i < tree_length; i++) {\n            if (typeof parse_tree[i] === 'string') {\n                output += parse_tree[i]\n            }\n            else if (Array.isArray(parse_tree[i])) {\n                match = parse_tree[i] // convenience purposes only\n                if (match[2]) { // keyword argument\n                    arg = argv[cursor]\n                    for (k = 0; k < match[2].length; k++) {\n                        if (!arg.hasOwnProperty(match[2][k])) {\n                            throw new Error(sprintf('[sprintf] property \"%s\" does not exist', match[2][k]))\n                        }\n                        arg = arg[match[2][k]]\n                    }\n                }\n                else if (match[1]) { // positional argument (explicit)\n                    arg = argv[match[1]]\n                }\n                else { // positional argument (implicit)\n                    arg = argv[cursor++]\n                }\n\n                if (re.not_type.test(match[8]) && re.not_primitive.test(match[8]) && arg instanceof Function) {\n                    arg = arg()\n                }\n\n                if (re.numeric_arg.test(match[8]) && (typeof arg !== 'number' && isNaN(arg))) {\n                    throw new TypeError(sprintf('[sprintf] expecting number but found %T', arg))\n                }\n\n                if (re.number.test(match[8])) {\n                    is_positive = arg >= 0\n                }\n\n                switch (match[8]) {\n                    case 'b':\n                        arg = parseInt(arg, 10).toString(2)\n                        break\n                    case 'c':\n                        arg = String.fromCharCode(parseInt(arg, 10))\n                        break\n                    case 'd':\n                    case 'i':\n                        arg = parseInt(arg, 10)\n                        break\n                    case 'j':\n                        arg = JSON.stringify(arg, null, match[6] ? parseInt(match[6]) : 0)\n                        break\n                    case 'e':\n                        arg = match[7] ? parseFloat(arg).toExponential(match[7]) : parseFloat(arg).toExponential()\n                        break\n                    case 'f':\n                        arg = match[7] ? parseFloat(arg).toFixed(match[7]) : parseFloat(arg)\n                        break\n                    case 'g':\n                        arg = match[7] ? String(Number(arg.toPrecision(match[7]))) : parseFloat(arg)\n                        break\n                    case 'o':\n                        arg = (parseInt(arg, 10) >>> 0).toString(8)\n                        break\n                    case 's':\n                        arg = String(arg)\n                        arg = (match[7] ? arg.substring(0, match[7]) : arg)\n                        break\n                    case 't':\n                        arg = String(!!arg)\n                        arg = (match[7] ? arg.substring(0, match[7]) : arg)\n                        break\n                    case 'T':\n                        arg = Object.prototype.toString.call(arg).slice(8, -1).toLowerCase()\n                        arg = (match[7] ? arg.substring(0, match[7]) : arg)\n                        break\n                    case 'u':\n                        arg = parseInt(arg, 10) >>> 0\n                        break\n                    case 'v':\n                        arg = arg.valueOf()\n                        arg = (match[7] ? arg.substring(0, match[7]) : arg)\n                        break\n                    case 'x':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16)\n                        break\n                    case 'X':\n                        arg = (parseInt(arg, 10) >>> 0).toString(16).toUpperCase()\n                        break\n                }\n                if (re.json.test(match[8])) {\n                    output += arg\n                }\n                else {\n                    if (re.number.test(match[8]) && (!is_positive || match[3])) {\n                        sign = is_positive ? '+' : '-'\n                        arg = arg.toString().replace(re.sign, '')\n                    }\n                    else {\n                        sign = ''\n                    }\n                    pad_character = match[4] ? match[4] === '0' ? '0' : match[4].charAt(1) : ' '\n                    pad_length = match[6] - (sign + arg).length\n                    pad = match[6] ? (pad_length > 0 ? pad_character.repeat(pad_length) : '') : ''\n                    output += match[5] ? sign + arg + pad : (pad_character === '0' ? sign + pad + arg : pad + sign + arg)\n                }\n            }\n        }\n        return output\n    }\n\n    var sprintf_cache = Object.create(null)\n\n    function sprintf_parse(fmt) {\n        if (sprintf_cache[fmt]) {\n            return sprintf_cache[fmt]\n        }\n\n        var _fmt = fmt, match, parse_tree = [], arg_names = 0\n        while (_fmt) {\n            if ((match = re.text.exec(_fmt)) !== null) {\n                parse_tree.push(match[0])\n            }\n            else if ((match = re.modulo.exec(_fmt)) !== null) {\n                parse_tree.push('%')\n            }\n            else if ((match = re.placeholder.exec(_fmt)) !== null) {\n                if (match[2]) {\n                    arg_names |= 1\n                    var field_list = [], replacement_field = match[2], field_match = []\n                    if ((field_match = re.key.exec(replacement_field)) !== null) {\n                        field_list.push(field_match[1])\n                        while ((replacement_field = replacement_field.substring(field_match[0].length)) !== '') {\n                            if ((field_match = re.key_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else if ((field_match = re.index_access.exec(replacement_field)) !== null) {\n                                field_list.push(field_match[1])\n                            }\n                            else {\n                                throw new SyntaxError('[sprintf] failed to parse named argument key')\n                            }\n                        }\n                    }\n                    else {\n                        throw new SyntaxError('[sprintf] failed to parse named argument key')\n                    }\n                    match[2] = field_list\n                }\n                else {\n                    arg_names |= 2\n                }\n                if (arg_names === 3) {\n                    throw new Error('[sprintf] mixing positional and named placeholders is not (yet) supported')\n                }\n                parse_tree.push(match)\n            }\n            else {\n                throw new SyntaxError('[sprintf] unexpected placeholder')\n            }\n            _fmt = _fmt.substring(match[0].length)\n        }\n        return sprintf_cache[fmt] = parse_tree\n    }\n\n    /**\n     * export to either browser or node.js\n     */\n    /* eslint-disable quote-props */\n    if (typeof exports !== 'undefined') {\n        exports['sprintf'] = sprintf\n        exports['vsprintf'] = vsprintf\n    }\n    if (typeof window !== 'undefined') {\n        window['sprintf'] = sprintf\n        window['vsprintf'] = vsprintf\n\n        if (typeof define === 'function' && define['amd']) {\n            define(function() {\n                return {\n                    'sprintf': sprintf,\n                    'vsprintf': vsprintf\n                }\n            })\n        }\n    }\n    /* eslint-enable quote-props */\n}()\n","export function h(name, attributes) {\n  var rest = []\n  var children = []\n  var length = arguments.length\n\n  while (length-- > 2) rest.push(arguments[length])\n\n  while (rest.length) {\n    var node = rest.pop()\n    if (node && node.pop) {\n      for (length = node.length; length--; ) {\n        rest.push(node[length])\n      }\n    } else if (node != null && node !== true && node !== false) {\n      children.push(node)\n    }\n  }\n\n  return typeof name === \"function\"\n    ? name(attributes || {}, children)\n    : {\n        nodeName: name,\n        attributes: attributes || {},\n        children: children,\n        key: attributes && attributes.key\n      }\n}\n\nexport function app(state, actions, view, container) {\n  var map = [].map\n  var rootElement = (container && container.children[0]) || null\n  var oldNode = rootElement && recycleElement(rootElement)\n  var lifecycle = []\n  var skipRender\n  var isRecycling = true\n  var globalState = clone(state)\n  var wiredActions = wireStateToActions([], globalState, clone(actions))\n\n  scheduleRender()\n\n  return wiredActions\n\n  function recycleElement(element) {\n    return {\n      nodeName: element.nodeName.toLowerCase(),\n      attributes: {},\n      children: map.call(element.childNodes, function(element) {\n        return element.nodeType === 3 // Node.TEXT_NODE\n          ? element.nodeValue\n          : recycleElement(element)\n      })\n    }\n  }\n\n  function resolveNode(node) {\n    return typeof node === \"function\"\n      ? resolveNode(node(globalState, wiredActions))\n      : node != null\n        ? node\n        : \"\"\n  }\n\n  function render() {\n    skipRender = !skipRender\n\n    var node = resolveNode(view)\n\n    if (container && !skipRender) {\n      rootElement = patch(container, rootElement, oldNode, (oldNode = node))\n    }\n\n    isRecycling = false\n\n    while (lifecycle.length) lifecycle.pop()()\n  }\n\n  function scheduleRender() {\n    if (!skipRender) {\n      skipRender = true\n      setTimeout(render)\n    }\n  }\n\n  function clone(target, source) {\n    var out = {}\n\n    for (var i in target) out[i] = target[i]\n    for (var i in source) out[i] = source[i]\n\n    return out\n  }\n\n  function setPartialState(path, value, source) {\n    var target = {}\n    if (path.length) {\n      target[path[0]] =\n        path.length > 1\n          ? setPartialState(path.slice(1), value, source[path[0]])\n          : value\n      return clone(source, target)\n    }\n    return value\n  }\n\n  function getPartialState(path, source) {\n    var i = 0\n    while (i < path.length) {\n      source = source[path[i++]]\n    }\n    return source\n  }\n\n  function wireStateToActions(path, state, actions) {\n    for (var key in actions) {\n      typeof actions[key] === \"function\"\n        ? (function(key, action) {\n            actions[key] = function(data) {\n              var result = action(data)\n\n              if (typeof result === \"function\") {\n                result = result(getPartialState(path, globalState), actions)\n              }\n\n              if (\n                result &&\n                result !== (state = getPartialState(path, globalState)) &&\n                !result.then // !isPromise\n              ) {\n                scheduleRender(\n                  (globalState = setPartialState(\n                    path,\n                    clone(state, result),\n                    globalState\n                  ))\n                )\n              }\n\n              return result\n            }\n          })(key, actions[key])\n        : wireStateToActions(\n            path.concat(key),\n            (state[key] = clone(state[key])),\n            (actions[key] = clone(actions[key]))\n          )\n    }\n\n    return actions\n  }\n\n  function getKey(node) {\n    return node ? node.key : null\n  }\n\n  function eventListener(event) {\n    return event.currentTarget.events[event.type](event)\n  }\n\n  function updateAttribute(element, name, value, oldValue, isSvg) {\n    if (name === \"key\") {\n    } else if (name === \"style\") {\n      for (var i in clone(oldValue, value)) {\n        var style = value == null || value[i] == null ? \"\" : value[i]\n        if (i[0] === \"-\") {\n          element[name].setProperty(i, style)\n        } else {\n          element[name][i] = style\n        }\n      }\n    } else {\n      if (name[0] === \"o\" && name[1] === \"n\") {\n        name = name.slice(2)\n\n        if (element.events) {\n          if (!oldValue) oldValue = element.events[name]\n        } else {\n          element.events = {}\n        }\n\n        element.events[name] = value\n\n        if (value) {\n          if (!oldValue) {\n            element.addEventListener(name, eventListener)\n          }\n        } else {\n          element.removeEventListener(name, eventListener)\n        }\n      } else if (name in element && name !== \"list\" && !isSvg) {\n        element[name] = value == null ? \"\" : value\n      } else if (value != null && value !== false) {\n        element.setAttribute(name, value)\n      }\n\n      if (value == null || value === false) {\n        element.removeAttribute(name)\n      }\n    }\n  }\n\n  function createElement(node, isSvg) {\n    var element =\n      typeof node === \"string\" || typeof node === \"number\"\n        ? document.createTextNode(node)\n        : (isSvg = isSvg || node.nodeName === \"svg\")\n          ? document.createElementNS(\n              \"http://www.w3.org/2000/svg\",\n              node.nodeName\n            )\n          : document.createElement(node.nodeName)\n\n    var attributes = node.attributes\n    if (attributes) {\n      if (attributes.oncreate) {\n        lifecycle.push(function() {\n          attributes.oncreate(element)\n        })\n      }\n\n      for (var i = 0; i < node.children.length; i++) {\n        element.appendChild(\n          createElement(\n            (node.children[i] = resolveNode(node.children[i])),\n            isSvg\n          )\n        )\n      }\n\n      for (var name in attributes) {\n        updateAttribute(element, name, attributes[name], null, isSvg)\n      }\n    }\n\n    return element\n  }\n\n  function updateElement(element, oldAttributes, attributes, isSvg) {\n    for (var name in clone(oldAttributes, attributes)) {\n      if (\n        attributes[name] !==\n        (name === \"value\" || name === \"checked\"\n          ? element[name]\n          : oldAttributes[name])\n      ) {\n        updateAttribute(\n          element,\n          name,\n          attributes[name],\n          oldAttributes[name],\n          isSvg\n        )\n      }\n    }\n\n    var cb = isRecycling ? attributes.oncreate : attributes.onupdate\n    if (cb) {\n      lifecycle.push(function() {\n        cb(element, oldAttributes)\n      })\n    }\n  }\n\n  function removeChildren(element, node) {\n    var attributes = node.attributes\n    if (attributes) {\n      for (var i = 0; i < node.children.length; i++) {\n        removeChildren(element.childNodes[i], node.children[i])\n      }\n\n      if (attributes.ondestroy) {\n        attributes.ondestroy(element)\n      }\n    }\n    return element\n  }\n\n  function removeElement(parent, element, node) {\n    function done() {\n      parent.removeChild(removeChildren(element, node))\n    }\n\n    var cb = node.attributes && node.attributes.onremove\n    if (cb) {\n      cb(element, done)\n    } else {\n      done()\n    }\n  }\n\n  function patch(parent, element, oldNode, node, isSvg) {\n    if (node === oldNode) {\n    } else if (oldNode == null || oldNode.nodeName !== node.nodeName) {\n      var newElement = createElement(node, isSvg)\n      parent.insertBefore(newElement, element)\n\n      if (oldNode != null) {\n        removeElement(parent, element, oldNode)\n      }\n\n      element = newElement\n    } else if (oldNode.nodeName == null) {\n      element.nodeValue = node\n    } else {\n      updateElement(\n        element,\n        oldNode.attributes,\n        node.attributes,\n        (isSvg = isSvg || node.nodeName === \"svg\")\n      )\n\n      var oldKeyed = {}\n      var newKeyed = {}\n      var oldElements = []\n      var oldChildren = oldNode.children\n      var children = node.children\n\n      for (var i = 0; i < oldChildren.length; i++) {\n        oldElements[i] = element.childNodes[i]\n\n        var oldKey = getKey(oldChildren[i])\n        if (oldKey != null) {\n          oldKeyed[oldKey] = [oldElements[i], oldChildren[i]]\n        }\n      }\n\n      var i = 0\n      var k = 0\n\n      while (k < children.length) {\n        var oldKey = getKey(oldChildren[i])\n        var newKey = getKey((children[k] = resolveNode(children[k])))\n\n        if (newKeyed[oldKey]) {\n          i++\n          continue\n        }\n\n        if (newKey != null && newKey === getKey(oldChildren[i + 1])) {\n          if (oldKey == null) {\n            removeElement(element, oldElements[i], oldChildren[i])\n          }\n          i++\n          continue\n        }\n\n        if (newKey == null || isRecycling) {\n          if (oldKey == null) {\n            patch(element, oldElements[i], oldChildren[i], children[k], isSvg)\n            k++\n          }\n          i++\n        } else {\n          var keyedNode = oldKeyed[newKey] || []\n\n          if (oldKey === newKey) {\n            patch(element, keyedNode[0], keyedNode[1], children[k], isSvg)\n            i++\n          } else if (keyedNode[0]) {\n            patch(\n              element,\n              element.insertBefore(keyedNode[0], oldElements[i]),\n              keyedNode[1],\n              children[k],\n              isSvg\n            )\n          } else {\n            patch(element, oldElements[i], null, children[k], isSvg)\n          }\n\n          newKeyed[newKey] = children[k]\n          k++\n        }\n      }\n\n      while (i < oldChildren.length) {\n        if (getKey(oldChildren[i]) == null) {\n          removeElement(element, oldElements[i], oldChildren[i])\n        }\n        i++\n      }\n\n      for (var i in oldKeyed) {\n        if (!newKeyed[i]) {\n          removeElement(element, oldKeyed[i][0], oldKeyed[i][1])\n        }\n      }\n    }\n    return element\n  }\n}\n","import {\n  sprintf\n} from 'sprintf-js'\n\nconst patterns = {\n  port: '[1-9][0-9]{0,4}',\n  ip: '\\\\b(?:[0-9]{1,3}\\\\.){3}[0-9]{1,3}\\\\b',\n  base64: '(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?',\n  ssHost: '^ss:\\\\/\\\\/',\n  method: '[^:]+',\n  password: '[^@]+'\n}\n\nconst halfBase64RegExp = sprintf('%s(?<config>%s)@(?<server>%s):(?<port>%s)',\n  patterns.ssHost,\n  patterns.base64,\n  patterns.ip,\n  patterns.port\n)\nconst fullBase64RegExp = sprintf('%s(?<base64>%s)', patterns.ssHost, patterns.base64)\nconst URLRegExp = sprintf('(?<method>%s):(?<password>%s)@(?<server>%s):(?<port>%s)',\n  patterns.method,\n  patterns.password,\n  patterns.ip,\n  patterns.port\n)\n\nconst testOnHalfBase64 = (value) => new RegExp(halfBase64RegExp).test(value)\nconst parseHalfBase64 = (value) => new RegExp(halfBase64RegExp).exec(value).groups\n\nconst testOnFullBase64 = (value) => new RegExp(fullBase64RegExp).test(value)\nconst parseFullBase64 = (value) => new RegExp(fullBase64RegExp).exec(value).groups\n\nconst parseURL = (value) => new RegExp(URLRegExp).exec(value).groups\n\nconst getConfigFromURL = (value) => {\n  const convertedURL = window.atob(value).trim()\n  const parsedURL = parseURL(convertedURL)\n\n  return parsedURL\n}\nconst getMethodAndPass = (value) => {\n  const [method, password] = window.atob(value).trim().split(':')\n  return {\n    method,\n    password\n  }\n}\n\nexport const convertToJSON = (result) => JSON.stringify(result, null, 2)\n\nexport const convertSStoObject = (/** @type {string} */ url) => {\n  const defaults = {\n    server: '',\n    server_port: 8388,\n    local_port: 1080,\n    password: '',\n    timeout: 600,\n    method: ''\n  }\n\n  if (testOnHalfBase64(url)) {\n    const parsedSS = parseHalfBase64(url)\n    const result = Object.assign({}, defaults, {\n      server: parsedSS.server,\n      server_port: Number(parsedSS.port),\n      ...getMethodAndPass(parsedSS.config)\n    })\n\n    return result\n  }\n\n  if (testOnFullBase64(url)) {\n    const { base64 } = parseFullBase64(url)\n    const config = getConfigFromURL(base64)\n    const result = Object.assign({}, defaults, {\n      server: config.server,\n      server_port: Number(config.port),\n      method: config.method,\n      password: config.password\n    })\n\n    return result\n  }\n\n  return null\n}\n","import { h, app } from 'hyperapp'\nimport { convertSStoObject, convertToJSON } from './utils'\nimport 'normalize.css'\nimport './style.css'\n\nconst state = {\n  url: '',\n  config: null,\n  json: '',\n  error: ''\n}\n\nconst exampleURL = 'ss://YmYtY2ZiOnRlc3RAMTkyLjE2OC4xMDAuMTo4ODg4Cg'\nconst exampleURL2 = 'ss://YmYtY2ZiOnRlc3Q=@192.168.100.1:8888'\n\nconst actions = {\n  setURL: value => () => ({ url: value }),\n  setJSON: value => () => ({ json: value !== null ? convertToJSON(value) : null }),\n  setConfig: value => () => ({ config: value }),\n  setError: value => () => ({ error: value }),\n  convert: event => (state, actions) => {\n    actions.setError('')\n    actions.setConfig(null)\n    actions.setJSON(null)\n    event.preventDefault()\n    try {\n      const config = convertSStoObject(state.url.trim())\n      if (config === null) {\n        actions.setError('Bad SS URL')\n        return\n      }\n      actions.setConfig(config)\n      actions.setJSON(config)\n    } catch (error) {\n      actions.setError(error)\n    }\n  }\n}\n\nconst resultList = (list) => (\n  <ul className='result__ul'>\n    {Object.keys(list).map(key =>\n      <li className='result__item'>\n        <span className='result__key'>{key}:</span>\n        <input className='result__input' type='text' value={list[key]} />\n      </li>)}\n  </ul>\n)\n\nconst view = (state, actions) => (\n  <main className='main'>\n    <div className='main__wrapper'>\n      <h1 className='title'>Convert SS URL to JSON</h1>\n      <form className='form' onsubmit={(event) => actions.convert(event)}>\n        <input type='text'\n          className='form__input'\n          value={state.url}\n          required\n          oninput={(event) => actions.setURL(event.target.value)} />\n        <button className='form__button'>Convert</button>\n      </form>\n      {!state.json && <div className='example'>\n        Example: {exampleURL}<br /> or <br />\n        {exampleURL2}\n      </div>}\n      {state.error && <div className='error'>\n        {state.error}\n      </div>}\n      {state.json && <div className='result'>\n        <div className='result__code'>\n          <code>\n            <pre>{state.json}</pre>\n          </code>\n        </div>\n        <div className='result__list'>\n          {resultList(state.config)}\n        </div>\n      </div>}\n    </div>\n  </main>\n)\n\nconst main = document.querySelector('main.main')\ndocument.body.removeChild(main)\napp(state, actions, view, document.body)\n"],"sourceRoot":""}